# This starter workflow is for a CMake project running on a single platform. There is a different starter workflow if you need cross-platform coverage.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-multi-platform.yml
name: build obs_studio

on:
  push:
    branches: [ "c/obs_studio" ]
  pull_request:
    branches: [ "c/obs_studio" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-22.04

    steps:
    - uses: actions/checkout@v3

    - name: get_ffmpeg
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: |
        echo "cmake --version"
        cmake --version
        sudo add-apt-repository ppa:jonathonf/ffmpeg-6
        sudo apt update
        sudo apt install -y ffmpeg libavformat-dev libavutil-dev libswscale-dev libswresample-dev
        echo "libavformat info"
        dpkg -L libavformat-dev
        dpkg -L libavutil-dev
        dpkg -L libswscale-dev
        dpkg -L libswresample-dev

    - name: get_obs_studio
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: |
        sudo apt update
        chmod +x ./c/obs_studio/linux/get_obs_studio_linux.sh
        ./c/obs_studio/linux/get_obs_studio_linux.sh
#        chmod +x ./c/obs_studio/linux/get_obs_studio_linux_preset.sh
#        ./c/obs_studio/linux/get_obs_studio_linux_preset.sh